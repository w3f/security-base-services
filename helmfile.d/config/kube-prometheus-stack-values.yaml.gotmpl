origin: security
{{ if ne .Environment.Name "ci" }}
cloudflareApiToken: {{ "ref+vault://op/vaults/k8s-security-secrets/items/base-services-cf-token?proto=http#password" | fetchSecretValue }}
{{ end }}
commonLabels:
  group: w3f

defaultRules:
  create: false

{{ if ne .Environment.Name "ci" }}
prometheusOperator:
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
kubeStateMetrics:
  resources:
    limits:
      cpu: 100m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 16Mi
{{ end }}

{{ if ne .Environment.Name "ci" }}
grafana:
  enabled: true
  adminPassword: {{ "ref+vault://op/vaults/k8s-security-secrets/items/grafana-dashboard-adminPassword?proto=http#password" | fetchSecretValue }}
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      prometheus.io/port: 9216
      prometheus.io/scrape: true
{{ end }}

{{ if ne .Environment.Name "ci" }}
      cert-manager.io/cluster-issuer: letsencrypt
      nginx.ingress.kubernetes.io/whitelist-source-range: {{ "ref+vault://op/vaults/k8s-security-secrets/items/pritunl-vpn-address?proto=http#password" | fetchSecretValue }} # pritunl-vpn VM in main-infrastructure GCP project
{{ end }}
      nginx.ingress.kubernetes.io/server-snippet: |
        location /metrics {
          deny all;
        } 
    hosts:
      - grafana.w3f.dev 
    tls:
      - secretName: w3f-tls
        hosts:
        - grafana.w3f.dev


nodeExporter:
  enabled: true



prometheus-node-exporter:
  podLabels:
    ## Add the 'node-exporter' label to be used by serviceMonitor to match standard common usage in rules and grafana dashboards
    ##
    jobLabel: node-exporter
    group: w3f

  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$


prometheusOperator:
  enabled: true
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false


prometheus:
  enabled: true
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: true
    ruleSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: true
    serviceMonitorSelector: {}
{{ if ne .Environment.Name "ci" }}
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 700m
        memory: 3Gi
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
{{ end }}
